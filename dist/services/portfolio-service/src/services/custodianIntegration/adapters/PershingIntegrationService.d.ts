import { CustodianConnection, CustodianConnectionConfig, DataFeedRequest, OrderSubmissionRequest, OrderSubmissionResponse, DocumentRetrievalRequest, ConnectionTestResult, APIConnectionType } from '../../../models/custodianIntegration/CustodianIntegration';
export declare class PershingIntegrationService {
    private client;
    private sftpClient;
    private baseUrl;
    private apiVersion;
    constructor();
    private setupInterceptors;
    validateConfig(config: CustodianConnectionConfig, connectionType?: APIConnectionType): Promise<any>;
    testConnection(config: CustodianConnectionConfig, connectionType?: APIConnectionType): Promise<ConnectionTestResult[]>;
    private testApiAuthentication;
    private testApiConnectivity;
    private testApiDataRetrieval;
    private testOrderSubmission;
    private testSftpConnection;
    private testFtpConnection;
    retrieveData(connection: CustodianConnection, request: DataFeedRequest): Promise<any>;
    private retrieveDataViaApi;
    private retrieveDataViaSftp;
    private retrieveDataViaFtp;
    submitOrders(connection: CustodianConnection, request: OrderSubmissionRequest): Promise<OrderSubmissionResponse>;
    retrieveDocuments(connection: CustodianConnection, request: DocumentRetrievalRequest): Promise<any[]>;
    private retrieveDocumentsViaFileTransfer;
    healthCheck(connection: CustodianConnection): Promise<boolean>;
    private authenticate;
    private refreshAuthToken;
    private getAuthToken;
    private getCertificateConfig;
    private storeAuthToken;
    private transformPershingApiData;
    private transformOrderToPershingFormat;
    private getPershingFilePattern;
    private matchesPattern;
    private parsePershingFile;
    private parsePershingRecord;
    private parsePershingDate;
    private delay;
}
