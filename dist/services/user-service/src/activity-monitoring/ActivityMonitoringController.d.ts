import { Router } from 'express';
import { ActivityTrackingService } from './ActivityTrackingService';
import { ActivityStreamingService } from './ActivityStreamingService';
import { ActivityAnalyticsService } from './ActivityAnalyticsService';
import { SuspiciousActivityDetectionService } from './SuspiciousActivityDetectionService';
import { ActivityRetentionService } from './ActivityRetentionService';
import { ActivityPrivacyService } from './ActivityPrivacyService';
export declare class ActivityMonitoringController {
    private router;
    private activityService;
    private streamingService;
    private analyticsService;
    private detectionService;
    private retentionService;
    private privacyService;
    constructor(activityService: ActivityTrackingService, streamingService: ActivityStreamingService, analyticsService: ActivityAnalyticsService, detectionService: SuspiciousActivityDetectionService, retentionService: ActivityRetentionService, privacyService: ActivityPrivacyService);
    getRouter(): Router;
    private setupRoutes;
    private getActivities;
    private getActivity;
    private createActivity;
    private getUserSessions;
    private getActivityMetrics;
    private subscribeToStream;
    private unsubscribeFromStream;
    private getStreamingSubscriptions;
    private getStreamingStats;
    private getStreamingHistory;
    private getUserActivitySummary;
    private getSecurityAnalysis;
    private getBehaviorAnalysis;
    private getTrendAnalysis;
    private getAnomalyDetection;
    private createReport;
    private getReports;
    private updateReport;
    private deleteReport;
    private getSuspiciousActivityAlerts;
    private getSuspiciousActivityAlert;
    private updateAlertStatus;
    private createDetectionRule;
    private getDetectionRules;
    private updateDetectionRule;
    private deleteDetectionRule;
    private getDetectionStatistics;
    private addThreatIntelligence;
    private createRetentionPolicy;
    private getRetentionPolicies;
    private updateRetentionPolicy;
    private deleteRetentionPolicy;
    private applyRetentionPolicy;
    private getArchivedActivities;
    private getArchivedActivity;
    private getRetentionStatistics;
    private createRetentionJob;
    private processDataSubjectRequest;
    private createPrivacyPolicy;
    private getPrivacyPolicies;
    private anonymizeActivity;
    private recordConsent;
    private withdrawConsent;
    private processDataSubjectRight;
    private exportUserData;
    private getPrivacyAuditLogs;
    private getComplianceReport;
    private createDataFlowMapping;
    private getDashboardOverview;
    private getRealTimeMetrics;
    private getSecurityDashboard;
    private getComplianceDashboard;
    private getUserActivityDashboard;
    private getHealthStatus;
    private getSystemStatus;
    private validateGetActivities;
    private validateActivityId;
    private validateCreateActivity;
    private validateUserId;
    private validateGetMetrics;
    private validateSubscribe;
    private validateSubscriptionId;
    private validateUserSummary;
    private validateSecurityAnalysis;
    private validateBehaviorAnalysis;
    private validateTrendAnalysis;
    private validateAnomalyDetection;
    private validateCreateReport;
    private validateUpdateReport;
    private validateReportId;
    private validateGetAlerts;
    private validateAlertId;
    private validateUpdateAlertStatus;
    private validateCreateDetectionRule;
    private validateUpdateDetectionRule;
    private validateRuleId;
    private validateAddThreatIntelligence;
    private validateCreateRetentionPolicy;
    private validateUpdateRetentionPolicy;
    private validatePolicyId;
    private validateApplyRetention;
    private validateGetArchived;
    private validateArchiveId;
    private validateCreateRetentionJob;
    private validateDataSubjectRequest;
    private validateCreatePrivacyPolicy;
    private validateAnonymizeActivity;
    private validateRecordConsent;
    private validateWithdrawConsent;
    private validateDataSubjectRight;
    private validateGetAuditLogs;
    private validateCreateDataFlow;
}
